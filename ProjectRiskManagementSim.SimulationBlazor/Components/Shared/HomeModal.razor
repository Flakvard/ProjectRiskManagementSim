@page "/select-project"
@using ProjectRiskManagementSim.DataAccess


@inject OxygenAnalyticsContext Context
@inject Func<Guid, Task<ProjectListViewModel>> ProjectListViewModelFactory
  <!-- Button trigger modal
<button id="openModal" class="bg-[#7e44eb] text-white px-4 py-2 rounded hover:bg-blue-600">
  Launch demo modal
</button>
-->
  <!-- Modal (Full-screen) -->
  <div id="modal"
    class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 @(IsModalVisible ? "" : "hidden")">
    <CreateNewProjectModalSkeleton />
    <div class="modal bg-white rounded-lg shadow-lg w-1/3 h-5/6 flex flex-col">

      <!-- Modal Header -->
      <div class="px-4 py-2 bg-[#7e44eb] rounded-t-lg flex justify-start items-center border-b flex">
            <h2 class="text-white text-lg font-semibold justify-start">New Simulation</h2>
            <div class="flex justify-end grow shrink self-stretch">
                <button id="closeModal" class="text-white hover:text-black p-2 w-12 h-12 "><CloseButton /></button>
            </div>
      </div>

      <!-- Modal Body -->
      <div class="overflow-auto">
        <div class="flex flex-col p-4 h-full">
          <!-- table -->
          <table class="w-full">
            <thead>
              <tr>
                <th class="border-b-2 border-gray-300">Name</th>
                <th class="border-b-2 border-gray-300">Category</th>
                <th class="border-b-2 border-gray-300">Status</th>
                <th class="border-b-2 border-gray-300">Selected</th>
              </tr>
            </thead>
            <tbody id="ProjectsInTable">
              @foreach (var project in ProjectsView.Projects)
              {
              var activeTdClass = (project.Selected == true ? "bg-[#7e44eb] text-white border-b border-gray-300" :
              "border-b border-gray-300");
              <tr id="@project.Id" hx-put="/select-project" hx-trigger="click" hx-target="#modal"
                hx-vals='{ "ProjectId": @(project.Id) }' hx-swap="outerHTML show:#@project.Id:top"
                @onput="HandleProjectSelection">
                <td class="hidden">@project.Id</td>
                <td class="hidden">@project.ProjectListViewModelId</td>
                <td class="@activeTdClass">@project.Name</td>
                <td class="@activeTdClass">@project.ProjectCategory</td>
                <td class="@activeTdClass">@project.Status</td>
                <td class="@activeTdClass">@project.Selected</td>
              </tr>
              }
            </tbody>
          </table>

        </div>

      </div>
      <!-- Modal Footer -->
      <div class=" px-4 py-2 border-t h-fit flex justify-end">
        <button id="closeModalFooter" class="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600 mr-2">
          Close
        </button>
        <button type="submit" class="bg-[#7e44eb] text-white px-4 py-2 rounded hover:bg-blue-600"
          hx-get="/create-new-project-modal/@ProjectId" hx-target="#modal" hx-swap="innerHTML"
          hx-indicator=".modal-indicator, .modal">
          Next page
        </button>
      </div>

    </div>
  </div>

  @code {
  [Parameter]
  public ProjectListViewModel ProjectsView { get; set; } = new ProjectListViewModel();

  [SupplyParameterFromForm]
  public int? ProjectId { get; set; }

  [SupplyParameterFromForm] public bool Open { get; set; }

  private bool IsModalVisible { get; set; } = false;

  protected override async Task OnInitializedAsync()
  {
  if (Open == true)
  {
  IsModalVisible = true;
  }
  else
  {
  IsModalVisible = false;
  }

  ProjectsView = await ProjectListViewModelFactory(Guid.NewGuid());
  }

  private void HandleProjectSelection(HtmxEventArgs args)
  {
  IsModalVisible = true; // Show the modal when the project is selected
  ProjectsView.HandleProjectSelection(ProjectId, ProjectsView);
  }
  }
