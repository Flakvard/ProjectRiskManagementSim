@page "/update-new-project-modal/{projectId:int}"
@using ProjectRiskManagementSim.DataAccess
@inject OxygenAnalyticsContext AnalyticsContext;
@inject OxygenSimulationContext SimContext;
@inherits ConditionalComponentBase
@inject HtmxContext Context

<HtmxFragment>
    <!-- Modal (Full-screen) -->
    <div id="modal-update"
         class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 @(IsModalVisible ? "" : " hidden")">
        <CreateNewProjectModalSkeleton />
        <div class="modal-update bg-white rounded-lg shadow-lg w-1/3 h-5/6 flex flex-col">

            <form id="start-simulation-form" hx-indicator="#spinner" hx-post="/update-simulation" @onpost="HandleForecastAnalysis"
                  hx-target="#simulation-update-result" hx-swap="innerHTML">

                <!-- Modal Header -->
                <div class="px-4 py-2 bg-[#7e44eb] rounded-t-lg flex justify-start items-center border-b">
                    <h2 class="text-white text-lg font-semibold justify-start">Update Simulation</h2>
                    <div class="flex justify-end grow shrink self-stretch">
                        <button hx-put="/update-new-project-modal/@(SimProjectId != 0 ? SimProjectId : ProjectSimulationId)"
                                hx-vals='{ "AlreadyExists": false }'
                                hx-target="#modal-update"
                                hx-swap="outerHTML"
                                hx-indicator=".modal-indicator, .modal-update"
                                @onput="HandleUpdate"
                                class="text-white hover:text-black p-2 w-12 h-12"
                                type="button">
                            <RefreshButton />
                        </button>
                        <button type="button" id="closeModalUpdate" class="text-white hover:text-black p-2 w-12 h-12"><CloseButton /></button>
                    </div>
                </div>

                <!-- Modal Body -->
                <div class="overflow-hidden">
                    <div class="flex flex-col p-4 h-full">
                        <div class="flex flex-row gap-4 h-full overflow-auto">

                            <!-- Simulation Details -->
                            <div class="flex flex-col gap-2 h-full flex-grow">
                                <h2>Project details</h2>
                                <div class="flex flex-col h-full gap-2">
                                    <div class="hidden">
                                        <label>SimProjectId: @NewProjectHandler.SimProjectId</label>
                                        <input class="input-border" type="text" name="SimProjectId" value="@NewProjectHandler.SimProjectId"
                                               required />
                                    </div>
                                    <div class="hidden">
                                        <label>JiraProjectId: @NewProjectHandler.JiraProjectId</label>
                                        <input class="input-border" type="text" name="JiraProjectId" value="@NewProjectHandler.JiraProjectId"
                                               required />
                                    </div>
                                    <div>
                                        <label>JiraId: @NewProjectHandler.JiraId</label>
                                        <input class="hidden input-border" type="text" name="JiraId" value="@NewProjectHandler.JiraId"
                                               required />
                                    </div>
                                    <div>
                                        <label>Jira Project Name: @NewProjectHandler.Name</label>
                                        <input class="hidden input-border" type="text" name="jiraProjectName" value="@NewProjectHandler.Name"
                                               required />
                                    </div>
                                    <div>
                                        <label>Name:</label>
                                        <input class="input-border" type="text" name="Name" required value="@NewProjectHandler.NameOfSim" />
                                    </div>
                                    <div>
                                        <label>Start Date:</label>
                                        <input class="input-border" type="date" name="StartDate" required value="@NewProjectHandler.StartDate.ToString("yyyy-MM-dd", System.Globalization.CultureInfo.InvariantCulture)" />
                                    </div>
                                    <div class="hidden">
                                        <label>Last Updated Date:</label>
                                        <input class="input-border" type="date" name="LastDate" required value="@NewProjectHandler.LastIssueDate.ToString("yyyy-MM-dd", System.Globalization.CultureInfo.InvariantCulture)" />
                                    </div>
                                    @if (@NewProjectHandler.TargetDate != null)
                                    {
                                        <div>
                                            <label>Target Date:</label>
                                            <input class="input-border" type="date" name="TargetDate" required value="@NewProjectHandler.TargetDate?.ToString("yyyy-MM-dd", System.Globalization.CultureInfo.InvariantCulture)" />
                                        </div>
                                    }
                                    else
                                    {
                                        <div>
                                            <label>Target Date:</label>
                                            <input class="input-border" type="date" name="TargetDate" required />
                                        </div>
                                    }
                                    <div>
                                        <label>Budget:</label>
                                        <input class="input-border" type="number" name="Budget" value="@NewProjectHandler.BudgetCosts"
                                               required />
                                    </div>
                                    <div>
                                        <label>BackendDevs:</label>
                                        <input class="input-border" type="number" name="BackendDevs" value="@NewProjectHandler.BackendDevs"
                                               required />
                                    </div>
                                    <div>
                                        <label>FrontendDevs:</label>
                                        <input class="input-border" type="number" name="FrontendDevs" value="@NewProjectHandler.FrontendDevs"
                                               required />
                                    </div>
                                    <div>
                                        <label>Testers:</label>
                                        <input class="input-border" type="number" name="Testers" value="@NewProjectHandler.Testers" required />
                                    </div>
                                    <div class="hidden flex w-full">
                                        <label class="flex flex-fit" for="isOngoing">Is Project Ongoing?:</label>
                                        <div class="flex w-full justify-items-end">
                                            <input class="input-border" type="checkbox" id="isOngoing" name="isOngoing">
                                        </div>
                                    </div>
                                    <div class="hidden">
                                        <label>Revenue Amount:</label>
                                        <input class="input-border" type="number" name="RevenueAmount"
                                               value="@double.Round(NewProjectHandler.TotalRevenue)" required />
                                    </div>
                                    <div class="hidden">
                                        <label>Cost:</label>
                                        <input class="input-border" type="number" name="Cost" value="@double.Round(NewProjectHandler.TotalCost)"
                                               required />
                                    </div>
                                    <div class="hidden">
                                        <label>Hours:</label>
                                        <input class="input-border" type="number" name="hours"
                                               value="@double.Round(NewProjectHandler.TotalHours)" required />
                                    </div>
                                    <div class="hidden">
                                        <label>Refreshed:</label>
                                        <input class="input-border" type="text" name="Refresh"
                                               value="@IsRefreshed.ToString()" required />
                                    </div>
                                </div>
                            </div>

                            <!-- Contianer for Column Details and Deliverables Details -->
                            <div class="flex flex-col gap-4 h-[500px] flex-grow overflow-auto">
                            

                                    <!-- Column Details -->
                                    <div class="flex flex-col h-1/2 overflow-hidden">
                                        <h2>Columns</h2>
                                        <div class="flex flex-col border border-[#b9b9b9] p-4 gap-2 h-full overflow-y-auto">
                                            <div id="kanbanForm" class="flex flex-col gap-2">
                                                <!-- Column 0 -->
                                                <div class="column-input-border">
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="name0">Name:</label>
                                                        <input class="input-border" type="text" id="name0" name="name0" value="Backlog">
                                                    </div>

                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="wip0">WIP:</label>
                                                        <input class="input-border" type="number" id="wip0" name="wip0"
                                                               value="@double.Round(NewProjectHandler.EpicCount)">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="wipMax0">WIP Max:</label>
                                                        <input class="input-border" type="number" id="wipMax0" name="wipMax0"
                                                               value="@double.Round(NewProjectHandler.EpicCount)">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="lowBound0">Estimated Low Bound:</label>
                                                        <input class="input-border" type="number" id="lowBound0" name="lowBound0" value="0">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="highBound0">Estimated High Bound:</label>
                                                        <input class="input-border" type="number" id="highBound0" name="highBound0" value="0">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="isBuffer0">Is Buffer:</label>
                                                        <input class="input-border" type="checkbox" id="isBuffer0" name="isBuffer0" checked>
                                                    </div>
                                                </div>
                                                <!-- Column 1 -->
                                                <div class="column-input-border">
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="name1">Name:</label>
                                                        <input class="input-border" type="text" id="name1" name="name1" value="Open">
                                                    </div>

                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="wip1">WIP:</label>
                                                        <input class="input-border" type="number" id="wip1" name="wip1" value="20">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="wipMax1">WIP Max:</label>
                                                        <input class="input-border" type="number" id="wipMax1" name="wipMax1" value="20">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="lowBound1">Estimated Low Bound:</label>
                                                        <input class="input-border" type="number" id="lowBound1" name="lowBound1"
                                                               value="@double.Round(NewProjectHandler.OpenPercentiles[0])">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="highBound1">Estimated High Bound:</label>
                                                        <input class="input-border" type="number" id="highBound1" name="highBound1"
                                                               value="@double.Round(NewProjectHandler.OpenPercentiles[1])">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="isBuffer1">Is Buffer:</label>
                                                        <input class="input-border" type="checkbox" id="isBuffer1" name="isBuffer1" checked>
                                                    </div>
                                                </div>
                                                <!-- Column 2 -->
                                                <div class="column-input-border">
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="name2">Name:</label>
                                                        <input class="input-border" type="text" id="name2" name="name2" value="In Progress">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="wip2">WIP:</label>
                                                        <input class="input-border" type="number" id="wip2" name="wip2" value="1">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="wipMax2">WIP Max:</label>
                                                        <input class="input-border" type="number" id="wipMax2" name="wipMax2" value="1">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="lowBound2">Estimated Low Bound:</label>
                                                        <input class="input-border" type="number" id="lowBound2" name="lowBound2"
                                                               value="@double.Round(NewProjectHandler.InProgressPercentiles[0])">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="highBound2">Estimated High Bound:</label>
                                                        <input class="input-border" type="number" id="highBound2" name="highBound2"
                                                               value="@double.Round(NewProjectHandler.InProgressPercentiles[1])">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="isBuffer2">Is Buffer:</label>
                                                        <input class="input-border" type="checkbox" id="isBuffer2" name="isBuffer2">
                                                    </div>
                                                </div>
                                                <!-- Column 3 -->
                                                <div class="column-input-border">
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="name3">Name:</label>
                                                        <input class="input-border" type="text" id="name3" name="name3" value="Stuck">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="wip3">WIP:</label>
                                                        <input class="input-border" type="number" id="wip3" name="wip3" value="17">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="wipMax3">WIP Max:</label>
                                                        <input class="input-border" type="number" id="wipMax3" name="wipMax3" value="17">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="lowBound3">Estimated Low Bound:</label>
                                                        <input class="input-border" type="number" id="lowBound3" name="lowBound3"
                                                               value="@double.Round(NewProjectHandler.AwaitingCustomerPercentiles[0])">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="highBound3">Estimated High Bound:</label>
                                                        <input class="input-border" type="number" id="highBound3" name="highBound3"
                                                               value="@double.Round(NewProjectHandler.AwaitingCustomerPercentiles[1])">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="isBuffer3">Is Buffer:</label>
                                                        <input class="input-border" type="checkbox" id="isBuffer3" name="isBuffer3" checked>
                                                    </div>
                                                </div>
                                                <!-- Column 4 -->
                                                <div class="column-input-border">
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="name4">Name:</label>
                                                        <input class="input-border" type="text" id="name4" name="name4" value="Finished">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="wip4">WIP:</label>
                                                        <input class="input-border" type="number" id="wip4" name="wip4" value="20">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="wipMax4">WIP Max:</label>
                                                        <input class="input-border" type="number" id="wipMax4" name="wipMax4" value="20">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="lowBound4">Estimated Low Bound:</label>
                                                        <input class="input-border" type="number" id="lowBound4" name="lowBound4"
                                                               value="@double.Round(NewProjectHandler.FinishedPercentiles[0])">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="highBound4">Estimated High Bound:</label>
                                                        <input class="input-border" type="number" id="highBound4" name="highBound4"
                                                               value="@double.Round(NewProjectHandler.FinishedPercentiles[1])">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="isBuffer4">Is Buffer:</label>
                                                        <input class="input-border" type="checkbox" id="isBuffer4" name="isBuffer4" checked>
                                                    </div>
                                                </div>
                                                <!-- Column 5 -->
                                                <div class="column-input-border">
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="name5">Name:</label>
                                                        <input class="input-border" type="text" id="name5" name="name5"
                                                               value="Ready to test on Development">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="wip5">WIP:</label>
                                                        <input class="input-border" type="number" id="wip5" name="wip5" value="17">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="wipMax5">WIP Max:</label>
                                                        <input class="input-border" type="number" id="wipMax5" name="wipMax5" value="17">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="lowBound5">Estimated Low Bound:</label>
                                                        <input class="input-border" type="number" id="lowBound5" name="lowBound5"
                                                               value="@double.Round(NewProjectHandler.ReadyForTestOnStagePercentiles[0])">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="highBound5">Estimated High Bound:</label>
                                                        <input class="input-border" type="number" id="highBound5" name="highBound5"
                                                               value="@double.Round(NewProjectHandler.ReadyForTestOnStagePercentiles[1])">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="isBuffer5">Is Buffer:</label>
                                                        <input class="input-border" type="checkbox" id="isBuffer5" name="isBuffer5" checked>
                                                    </div>
                                                </div>
                                                <!-- Column 6 -->
                                                <div class="column-input-border">
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="name6">Name:</label>
                                                    <input class="input-border" type="text" id="name6" name="name6" value="Testing on Development">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="wip6">WIP:</label>
                                                        <input class="input-border" type="number" id="wip6" name="wip6" value="0">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="wipMax6">WIP Max:</label>
                                                        <input class="input-border" type="number" id="wipMax6" name="wipMax6" value="2">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="lowBound6">Estimated Low Bound:</label>
                                                        <input class="input-border" type="number" id="lowBound6" name="lowBound6"
                                                               value="@double.Round(NewProjectHandler.TestingOnStagePercentiles[0])">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="highBound6">Estimated High Bound:</label>
                                                        <input class="input-border" type="number" id="highBound6" name="highBound6"
                                                               value="@double.Round(NewProjectHandler.TestingOnStagePercentiles[1])">
                                                    </div>
                                                <div class="flex flex-row gap-2 justify-center items-center">
                                                    <label class="label-input" for="lowBound6">Estimated Low Bound (Ongoing):</label>
                                                    <input class="input-border" type="number" id="lowBound6" name="lowBound6"
                                                           value="@double.Round(NewProjectHandler.TestingOnStagePercentilesOngoing[0])">
                                                </div>
                                                <div class="flex flex-row gap-2 justify-center items-center">
                                                    <label class="label-input" for="highBound6">Estimated High Bound (Ongoing):</label>
                                                    <input class="input-border" type="number" id="highBound6" name="highBound6"
                                                           value="@double.Round(NewProjectHandler.TestingOnStagePercentilesOngoing[1])">
                                                </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="isBuffer6">Is Buffer:</label>
                                                        <input class="input-border" type="checkbox" id="isBuffer6" name="isBuffer6">
                                                    </div>
                                                </div>
                                                <!-- Column 7 -->
                                                <div class="column-input-border">
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="name7">Name:</label>
                                                        <input class="input-border" type="text" id="name7" name="name7"
                                                               value="Waiting Deployment on Production">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="wip7">WIP:</label>
                                                        <input class="input-border" type="number" id="wip7" name="wip7" value="20">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="wipMax7">WIP Max:</label>
                                                        <input class="input-border" type="number" id="wipMax7" name="wipMax7" value="20">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="lowBound7">Estimated Low Bound:</label>
                                                        <input class="input-border" type="number" id="lowBound7" name="lowBound7"
                                                               value="@double.Round(NewProjectHandler.WaitingForDeploymentToProductionPercentiles[0])">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="highBound7">Estimated High Bound:</label>
                                                        <input class="input-border" type="number" id="highBound7" name="highBound7"
                                                               value="@double.Round(NewProjectHandler.WaitingForDeploymentToProductionPercentiles[1])">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="isBuffer7">Is Buffer:</label>
                                                        <input class="input-border" type="checkbox" id="isBuffer7" name="isBuffer7" checked>
                                                    </div>
                                                </div>
                                                <!-- Column 8 -->
                                                <div class="column-input-border">
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="name8">Name:</label>
                                                        <input class="input-border" type="text" id="name8" name="name8"
                                                               value="Ready to test on Production">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="wip8">WIP:</label>
                                                        <input class="input-border" type="number" id="wip8" name="wip8" value="0">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="wipMax8">WIP Max:</label>
                                                        <input class="input-border" type="number" id="wipMax8" name="wipMax8" value="2">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="lowBound8">Estimated Low Bound:</label>
                                                        <input class="input-border" type="number" id="lowBound8" name="lowBound8"
                                                               value="@double.Round(NewProjectHandler.ReadyToTestOnProductionPercentiles[0])">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="highBound8">Estimated High Bound:</label>
                                                        <input class="input-border" type="number" id="highBound8" name="highBound8"
                                                               value="@double.Round(NewProjectHandler.ReadyToTestOnProductionPercentiles[1])">
                                                    </div>
                                                <div class="flex flex-row gap-2 justify-center items-center">
                                                    <label class="label-input" for="lowBoundOngoing8">Estimated Low Bound (Ongoing):</label>
                                                    <input class="input-border" type="number" id="lowBoundOngoing8" name="lowBoundOngoing8"
                                                           value="@double.Round(NewProjectHandler.ReadyToTestOnProductionPercentilesOngoing[0])">
                                                </div>
                                                <div class="flex flex-row gap-2 justify-center items-center">
                                                    <label class="label-input" for="highBoundOngoing8">Estimated High Bound (Ongoing):</label>
                                                    <input class="input-border" type="number" id="highBoundOngoing8" name="highBoundOngoing8"
                                                           value="@double.Round(NewProjectHandler.ReadyToTestOnProductionPercentilesOngoing[1])">
                                                </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="isBuffer8">Is Buffer:</label>
                                                        <input class="input-border" type="checkbox" id="isBuffer8" name="isBuffer8">
                                                    </div>
                                                </div>

                                                <!-- Column 9 -->
                                                <div class="column-input-border">
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="name9">Name:</label>
                                                        <input class="input-border" type="text" id="name9" name="name9" value="Done">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="wip9">WIP:</label>
                                                        <input class="input-border" type="number" id="wip9" name="wip9"
                                                               value="@double.Round(NewProjectHandler.EpicCount)">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="wipMax9">WIP Max:</label>
                                                        <input class="input-border" type="number" id="wipMax9" name="wipMax9"
                                                               value="@double.Round(NewProjectHandler.EpicCount)">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="lowBound9">Estimated Low Bound:</label>
                                                        <input class="input-border" type="number" id="lowBound9" name="lowBound9"
                                                               value="@double.Round(NewProjectHandler.DonePercentiles[0])">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="highBound9">Estimated High Bound:</label>
                                                        <input class="input-border" type="number" id="highBound9" name="highBound9"
                                                               value="@double.Round(NewProjectHandler.DonePercentiles[1])">
                                                    </div>
                                                    <div class="flex flex-row gap-2 justify-center items-center">
                                                        <label class="label-input" for="isBuffer9">Is Buffer:</label>
                                                        <input class="input-border" type="checkbox" id="isBuffer9" name="isBuffer9" checked>
                                                    </div>
                                                </div>
                                                <div id="addColumnButton" class="w-fit bg-[#7e44eb] text-white px-4 py-2 rounded hover:bg-blue-600">
                                                    <button type="button" onclick="addColumn()">Add Column</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Deliverables Details -->
                                <div class="flex flex-col h-1/2 overflow-hidden">
                                        <h2>Deliverables</h2>
                                        <div class="flex flex-col border border-[#b9b9b9] p-4 gap-2 h-full overflow-y-auto">
                                            <div>
                                                <label>Deliverable Number:</label>
                                                <input class="input-border" type="number" step="1" name="DeliverablesNumber" required
                                                       value="@NewProjectHandler.EpicCount" />
                                            </div>
                                            <div>
                                                <label>Issues Number:</label>
                                                <input class="input-border" type="number" step="1" name="IssueNumber" required
                                                       value="@NewProjectHandler.IssuesCount" />
                                            </div>
                                            <div class="hidden">
                                                <label>Percentage Low Bound:</label>
                                                <input class="input-border" type="number" step="1" name="PercentageLowBound" required value="0" />
                                            </div>
                                            <div class="hidden">
                                                <label>Percentage High Bound:</label>
                                                <input class="input-border" type="number" step="1" name="PercentageHighBound" required value="100" />
                                            </div>
                                            <div>
                                                <label>Issues Done Count:</label>
                                                <input class="input-border" type="number" step="1" name="IssuesDoneCount" required
                                                       value="@NewProjectHandler.IssuesDoneCount" />
                                            </div>
                                            <div>
                                                <label>Bug Count:</label>
                                                <input class="input-border" type="number" step="1" name="BugCount" required
                                                       value="@NewProjectHandler.BugCount" />
                                            </div>
                                            <div>
                                                <label>Bug %:</label>
                                            <input class="input-border" type="number" step="0.01" name="BugPercentage" required
                                                   value="@double.Round(@NewProjectHandler.BugPercentage,2).ToString(System.Globalization.CultureInfo.InvariantCulture)" />
                                            </div>
                                            <div class="">
                                                <label>Bug Percentage Low Bound:</label>
                                            <input class="input-border" type="number" step="0.01" name="BugCycleTimePercentilesLowBound" required value="@double.Round(@NewProjectHandler.BugCycleTimePercentiles[0],2).ToString(System.Globalization.CultureInfo.InvariantCulture)" />
                                            </div>
                                            <div class="">
                                                <label>Bug Percentage High Bound:</label>
                                            <input class="input-border" type="number" step="0.01" name="BugCycleTimePercentilesHighBound" required value="@double.Round(@NewProjectHandler.BugCycleTimePercentiles[1],2).ToString(System.Globalization.CultureInfo.InvariantCulture)" />
                                            </div>
                                            <div>
                                                <label>Awaiting Customer %:</label>
                                            <input class="input-border" type="number" step="0.01" name="AwaitCustPercentage" required
                                                   value="@double.Round(@NewProjectHandler.AwaitCustPercentage,2).ToString(System.Globalization.CultureInfo.InvariantCulture)" />
                                            </div>
                                            <div class="">
                                                <label>Awaiting Customer Low Bound:</label>
                                            <input class="input-border" type="number" step="1" name="AwaitCustPercentilesLowBound" required value="@double.Round(@NewProjectHandler.AwaitCustPercentiles[0],0).ToString(System.Globalization.CultureInfo.InvariantCulture)" />
                                            </div>
                                            <div class="">
                                                <label>Awaiting Customer High Bound:</label>
                                            <input class="input-border" type="number" step="1" name="AwaitCustPercentilesHighBound" required value="@double.Round(@NewProjectHandler.AwaitCustPercentiles[1],0).ToString(System.Globalization.CultureInfo.InvariantCulture)" />
                                            </div>
                                            <div>
                                                <label>Awaiting Task %:</label>
                                            <input class="input-border" type="number" step="0.01" name="AwaitTaskPercentage" required
                                                   value="@double.Round(@NewProjectHandler.AwaitTaskPercentage,2).ToString(System.Globalization.CultureInfo.InvariantCulture)" />
                                            </div>
                                            <div class="">
                                                <label>Awaiting Task Low Bound:</label>
                                            <input class="input-border" type="number" step="1" name="AwaitTaskPercentilesLowBound" required value="@double.Round(@NewProjectHandler.AwaitTaskPercentiles[0],0).ToString(System.Globalization.CultureInfo.InvariantCulture)" />
                                            </div>
                                            <div class="">
                                                <label>Awaiting Task High Bound:</label>
                                            <input class="input-border" type="number" step="1" name="AwaitTaskPercentilesHighBound" required value="@double.Round(@NewProjectHandler.AwaitTaskPercentiles[1],0).ToString(System.Globalization.CultureInfo.InvariantCulture)" />
                                            </div>
                                            <div>
                                                <label>Awaiting Third Party %:</label>
                                            <input class="input-border" type="number" step="0.01" name="Await3pPercentage" required
                                                   value="@double.Round(@NewProjectHandler.Await3pPercentage,2).ToString(System.Globalization.CultureInfo.InvariantCulture)" />
                                            </div>
                                            <div class="">
                                                <label>Awaiting Third  Low Bound:</label>
                                            <input class="input-border" type="number" step="0.01" name="Await3PPercentilesLowBound" required value="@double.Round(@NewProjectHandler.Await3PPercentiles[0],0).ToString(System.Globalization.CultureInfo.InvariantCulture)" />
                                            </div>
                                            <div class="">
                                                <label>Awaiting Third  High Bound:</label>
                                            <input class="input-border" type="number" step="0.01" name="Await3PPercentilesHighBound" required value="@double.Round(@NewProjectHandler.Await3PPercentiles[1],0).ToString(System.Globalization.CultureInfo.InvariantCulture)" />
                                            </div>

                                        </div>
                                    </div>

                            </div>
                        </div>

                    </div>
                </div>

                <!-- Modal Footer -->
                <div class="px-4 py-2 border-t h-fit flex justify-between">
                    <div class="flex justify-start">
                        <button type="button" id="closeModalUpdateFooter" class="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600 mr-2">
                            Close
                        </button>
                    </div>
                    <div class="flex justify-end" id="simulation-update-result">
                        <button type="submit"
                                class="bg-[#7e44eb] flex gap-2 text-white px-4 py-2 rounded hover:bg-red-400">
                            <span>Save changes</span>
                            <div id="spinner"
                                 class="htmx-indicator spinner inline-block h-6 w-6 animate-spin rounded-full border-4 border-solid border-current border-e-transparent align-[-0.125em] text-neutral-50 motion-reduce:animate-[spin_1.5s_linear_infinite]"
                                 role="status">
                                <span class="!absolute !-m-px !h-px !w-px !overflow-hidden !whitespace-nowrap !border-0 !p-0 ![clip:rect(0,0,0,0)]">Loading...</span>
                            </div>
                        </button>

                    </div>
                </div>
            </form>
        </div>
    </div>
</HtmxFragment>



@code {
    [Parameter] public string Id { get; set; } = "modal-update";
    private bool IsModalVisible { get; set; } = false;

    [Parameter] public int ProjectId { get; set; } = 0;
    [SupplyParameterFromForm] public int SimProjectId { get; set; }
    public CreateNewProjectHandler NewProjectHandler { get; set; } = new CreateNewProjectHandler();
    [Parameter] public EventCallback<int> OnForecastSave { get; set; }
    [Parameter] public int ProjectSimulationId { get; set; } = 0;
    public bool IsRefreshed { get; set; } = false;

    [SupplyParameterFromForm] public bool AlreadyExists { get; set; } = true;
    protected override async Task OnInitializedAsync()
    {
        if (ProjectId != 0)
        {
            NewProjectHandler.ProjectId = ProjectId;
        }

        NewProjectHandler.SimProjectId = SimProjectId;

        if (ProjectSimulationId != 0)
        {
            NewProjectHandler.SimProjectId = ProjectSimulationId;
        }
        await NewProjectHandler.InitializeProjectsAsync(AnalyticsContext, SimContext, AlreadyExists);
        AlreadyExists = NewProjectHandler.AlreadySimulated; AlreadyExists = NewProjectHandler.AlreadySimulated;
    }
    private async Task HandleForecastAnalysis(HtmxEventArgs args)
    {
        Context.Response.Trigger("newForcast");
        await OnForecastSave.InvokeAsync(SimProjectId);
    }
    private async Task HandleUpdate(HtmxEventArgs args)
    {
        IsRefreshed = true;
        NewProjectHandler.SimProjectId = SimProjectId;
        await NewProjectHandler.UpdateAndFetchProjectInfor(SimProjectId, AnalyticsContext, SimContext);
        IsModalVisible = true;
    }

}
