@page "/kanban-simulation/{simulationId:guid}/{projectSimulationId:int}"
@inject Func<Guid, RunSimulationHandler> handlerFactory
@code {
    [Parameter] public Guid simulationId { get; set; }

    [Parameter] public int ProjectSimulationId { get; set; }

    public RunSimulationHandler runSimulationHandler;

    protected override void OnInitialized()
    {
        runSimulationHandler = handlerFactory(simulationId);
        runSimulationHandler.RunningSimulation();
    }
}
<div>
    <h3 class="text-white border border-white w-full p-2">
        Kanban Board Simulation - Day
        @runSimulationHandler.currentDay
    </h3>
    @if (runSimulationHandler.columns != null)
    {
        <div class="Runsimulation h-full flex-col justify-start items-start gap-2.5 inline-flex">
            <table class="min-w-full table-auto border-collapse border border-white">
                <thead class="bg-[#ffb4ba]/50">
                    <tr>
                        @foreach (var column in runSimulationHandler.columns)
                        {
                            <th class="border border-white">
                                <div class="p-4 shrink h-full">
                                    <div class="text-white text-base font-extrabold font-['Outfit']">
                                        @column.Name
                                    </div>
                                    <div class="WipContent justify-start items-center gap-0.5 inline-flex shrink">
                                        @if (!column.IsBuffer)
                                        {
                                            @for (int i = 0; i < @column.WIP; i++)
                                            {
                                                <div>
                                                    <WIPSVGIconWhite />
                                                </div>
                                            }
                                            @for (int i = @column.WIP; i < @column.WIPMax; i++)
                                            {
                                                <div>
                                                    <WIPSVGIconBlack />
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            <div class="text-white text-base font-extrabold font-['Outfit']">
                                                WIP: @column.WIP
                                                Max: @column.WIPMax
                                            </div>
                                        }
                                    </div>
                                </div>
                            </th>
                        }
                    </tr>
                </thead>
                <tbody>
                    <tr class="align-top">
                        @foreach (var column in runSimulationHandler.columns)
                        {
                            <td class="border border-white align-top p-2">
                                <div class="flex flex-col gap-2">
                                    @if (runSimulationHandler.columnDeliverables != null)
                                    {
                                        @if (runSimulationHandler.columnDeliverables.ContainsKey(column))
                                        {

                                            @foreach (var deliverable in runSimulationHandler.columnDeliverables[column])
                                            {
                                                @if (!deliverable.IsBug && !deliverable.IsBlocked)
                                                {
                                                    <div class="bg-[#7e44eb] w-f h-f p-2 text-white rounded-lg">
                                                        <strong>Task: @deliverable.Nr</strong><br />
                                                        Completion Days: @Math.Round(deliverable.CompletionDays)<br />
                                                        Wait Time: @Math.Round(deliverable.WaitTime)<br />
                                                        Stopped Time: @Math.Round(deliverable.StoppedWorkingTime)
                                                    </div>
                                                }
                                                else if (deliverable.IsBug && !deliverable.IsBlocked)
                                                {
                                                    <div class="bg-[#7FFF4C] w-f h-f p-2 text-white rounded-lg">
                                                        <strong>Task: @deliverable.Nr</strong><br />
                                                        Completion Days: @Math.Round(deliverable.CompletionDays)<br />
                                                        Wait Time: @Math.Round(deliverable.WaitTime)<br />
                                                        Stopped Time: @Math.Round(deliverable.StoppedWorkingTime)
                                                    </div>

                                                }
                                                else if (deliverable.IsBlocked)
                                                {
                                                    <div class="bg-[#FF116C] w-f h-f p-2 text-white rounded-lg">
                                                        <strong>Task: @deliverable.Nr</strong><br />
                                                        Completion Days: @Math.Round(deliverable.CompletionDays)<br />
                                                        Wait Time: @Math.Round(deliverable.WaitTime)<br />
                                                        Stopped Time: @Math.Round(deliverable.StoppedWorkingTime)
                                                    </div>

                                                }
                                            }
                                        }
                                    }
                                </div>
                            </td>
                        }
                    </tr>
                </tbody>
            </table>
        </div>
    }
</div>
