@using ProjectRiskManagementSim.DataAccess
@using ProjectRiskManagementSim.DataAccess.Models
@inject IServiceScopeFactory ServiceScopeFactory
@using ProjectRiskManagementSim.SimulationBlazor.Components.Pages.Dashboard
@using ProjectRiskManagementSim.ProjectSimulation.Interfaces
@page "/dashboard/{projectSimulationId:int}/staff-analysis"
<!-- Staff Analysis in Lower Right Content -->
<div id="staffAnalysis" class="grow shrink basis-0 self-stretch">
  <StaffAnalysisSkeleton />

  <div
    class="staffAnalysis grow shrink basis-0 self-stretch bg-[#ffb4ba]/25 rounded-2xl justify-start items-center gap-2.5 flex">
    <div
      class="StaffResults grow shrink basis-0 self-stretch p-4 flex-col justify-start items-start gap-2.5 inline-flex">
      <div class="flex">
        <div class="StaffAnalysisSection self-stretch px-[30px] py-px justify-center items-center gap-2.5 inline-flex">
          <div class="StaffAnalysisHeader text-white text-xl font-semibold font-['Outfit'] capitalize tracking-wider">
            Staff analysis</div>
        </div>
        <div class="flex p-1" hx-trigger="click" hx-indicator=".staff-indicator,.staffAnalysis"
          hx-put="/dashboard/@ProjectSimulationId/staff-analysis" hx-target="#staffAnalysis" hx-swap="OuterHTML"
          @onput="HandleStaffAnalysis">
          <RunSimButton />
        </div>
      </div>
      <div
        class="Table self-stretch grow shrink basis-0 bg-white rounded border border-[#b9b9b9] flex-col justify-start items-start flex">
        <div class="Row self-stretch justify-start items-start inline-flex">
          <div
            class="Cell grow shrink basis-0 self-stretch bg-[#7e44eb] border-l border-t border-[#b9b9b9] flex-col justify-start items-start inline-flex">
            <div class="Content self-stretch px-3 py-2.5 justify-start items-start inline-flex">
              <div
                class="Text grow shrink basis-0 text-center text-white text-sm font-semibold font-['Outfit'] leading-[18.20px]">
                #</div>
            </div>
          </div>
          <div
            class="Cell grow shrink basis-0 self-stretch bg-[#7e44eb] border-l border-t border-[#b9b9b9] flex-col justify-start items-start inline-flex">
            <div class="Content self-stretch px-3 py-2.5 justify-start items-start inline-flex">
              <div
                class="Text grow shrink basis-0 text-center text-white text-sm font-semibold font-['Outfit'] leading-[18.20px]">
                Priority</div>
            </div>
          </div>
        </div>
        @foreach (var result in listStaffAnalysis.StaffAnalysisList)
        {
        <div class="Row self-stretch justify-start items-start inline-flex">
          <div
            class="Cell grow shrink basis-0 self-stretch bg-white/0 border-l border-t border-[#b9b9b9] flex-col justify-start items-start inline-flex">
            <div class="Content self-stretch px-3 py-2.5 justify-start items-start inline-flex">
              <div
                class="Text grow shrink basis-0 text-center text-black text-xs font-normal font-['Inter'] leading-none">
                @result.Priority</div>
            </div>
          </div>
          <div
            class="Cell grow shrink basis-0 self-stretch bg-white/0 border-l border-t border-[#b9b9b9] flex-col justify-start items-start inline-flex">
            <div class="Content self-stretch px-3 py-2.5 justify-start items-start inline-flex">
              <div
                class="Text grow shrink basis-0 text-center text-black text-xs font-normal font-['Inter'] leading-none">
                @result.StaffName</div>
            </div>
          </div>
        </div>
        }
      </div>
    </div>
  </div>
</div>

@code {
private IMonteCarloSimulation _MCS;
private OxygenSimulationContext _context;
[Parameter] public int ProjectSimulationId { get; set; }
[Parameter] public ProjectSimulationModel Simulation { get; set; }
public ListStaffAnalysis listStaffAnalysis { get; set; }
protected override async Task OnInitializedAsync()
{
using var scope = ServiceScopeFactory.CreateScope();
_MCS = scope.ServiceProvider.GetRequiredService<IMonteCarloSimulation>();

  listStaffAnalysis = new ListStaffAnalysis(Simulation, _MCS);

  }

  private async Task HandleStaffAnalysis(HtmxEventArgs args)
  {
  using var scope = ServiceScopeFactory.CreateScope();
  _context = scope.ServiceProvider.GetRequiredService<OxygenSimulationContext>();
    await listStaffAnalysis.RunSimulationAnalysis(_context, ProjectSimulationId);
    }
    }
